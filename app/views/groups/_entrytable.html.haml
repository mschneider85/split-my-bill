= link_to '#', id: 'action-delete-entry', data: { confirm: 'Buchung wirklich löschen?', commit: 'Löschen' }, class: 'btn btn-default btn-action disabled hidden', title: 'Löschen', method: :delete do
  Buchung löschen
%table.table.table-bordered.table-hover.display.responsive.nowrap#entries{ width: "100%" }
  %thead
    %tr
      %th.col-md-2 Datum
      %th.col-md-2 Betrag
      %th.col-md-4 Verwendungszweck
      %th.col-md-4 Personen
  %tbody
    - group.entries.all.order(created_at: :desc).each do |entry|
      %tr{ data: { id: entry.id } }
        %td
          %span= l entry.created_at.to_date
        %td
          %span.label.label-default= humanized_money_with_symbol entry.amount
        %th
          = entry.name
        %td
          = entry.transactions.map{ |transaction| transaction.creditor.name }.uniq.to_sentence
          = icon 'long-arrow-right'
          - debtor_array = entry.transactions.map{ |transaction| transaction.debtor.name }.uniq
          - if debtor_array.size == @group.memberships.count
            Alle
          - else
            = debtor_array.to_sentence
:coffee
  $('#entries').DataTable
    responsive: true
    order: [[ 0, "desc" ]]
    dom: 'Bfrtip'
    pagingType: 'simple'
    pageLength: 10
    select:
      style: 'os'
      info: false
    language: {
      buttons:
        pageLength:       "%d #{Entry.model_name.human(count: 2)}",
        selectAll:        "Alle auswählen",
        selectNone:       "Auswahl aufheben"
      sEmptyTable:        "Keine Daten in der Tabelle vorhanden",
      sInfo:              "_START_ bis _END_ von _TOTAL_ #{Entry.model_name.human(count: 2)}",
      sInfoEmpty:         "0 bis 0 von 0 #{Entry.model_name.human(count: 2)}",
      sInfoFiltered:      "(gefiltert von _MAX_ #{Entry.model_name.human(count: 2)})",
      sInfoPostFix:       "",
      sInfoThousands:     ".",
      sLengthMenu:        "_MENU_ #{Entry.model_name.human(count: 2)} anzeigen",
      sLoadingRecords:    "Wird geladen...",
      sProcessing:        "Bitte warten...",
      sSearch:            "Suchen",
      sZeroRecords:       "Keine #{Entry.model_name.human(count: 2)} vorhanden.",
      oPaginate: {
        sFirst:           "<i class='fa fa-chevron-left'></i><i class='fa fa-chevron-left'></i>",
        sPrevious:        "<i class='fa fa-chevron-left'></i>",
        sNext:            "<i class='fa fa-chevron-right'></i>",
        sLast:            "<i class='fa fa-chevron-right'></i><i class='fa fa-chevron-right'></i>"
      }
    }

  $('#entries_wrapper #entries_filter').prepend($('.btn#action-delete-entry'))

  $('#entries_wrapper').on 'click', 'tr', ->
    if $("#entries_wrapper tr.selected").length == 0
      $(".btn-action:not([class*='disabled'])").addClass('disabled hidden')
    else if $("#entries_wrapper tr.selected").length == 1
      $('.btn-action').removeClass('disabled hidden')
      id = $("tr.selected").data('id')
      $('.btn-action#action-delete-entry').attr("href", "/groups/#{@group.id}/entries/" + id)
